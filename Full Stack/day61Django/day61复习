1.HTTP协议消息的格式
    1.请求（request）
        请求方法 路径 http/1.1\r\b
        k1:v1\r\n
        ..\r\n
        请求体  <-- 可有可无

    2.响应（response）
        HTTP/1.1 状态码 状态描述符\r\n
        k1:v1\r\n
        content-Type:text/html;charset=utf8
        \r\n
        响应正文  <-- html内容

2.web框架的本质
    a.收发socket消息  -->  按照HTTP协议消息格式去解析消息

    b.路径和要执行的函数的对应关系  -->  主要的业务逻辑

    c.字符串替换  -->  模板（特殊符号 -->  数据）

3.一个完整的请求流程
    0.启动服务端，等待客户端（用户的浏览器）来连接
    1.浏览器地址栏输入URL，与服务端建立连接，浏览器发送请求
    2.服务端收到请求消息，解析请求消息，根据路径和函数的对应关系，找到将要执行的函数
    3.执行函数，打开html文件，进行字符串替换，得到一个最终要返回的html内容
    4.按照HTTP协议的消息格式要求，把html内容回复给用户浏览器（发送响应）
    5.浏览器收到响应的消息之后，按照html的规则渲染页面
    6.关闭连接


Django昨日内容梳理
    1.Django项目的启动：
        1.命令行启动
            在项目的根目录下（也就是有manage.py的哪个目录），运行：
            python manage.py runserver IP:端口  -->  在指定的IP和端口启动
            python manage.py runserver 端口     -->  在指定的端口启动
            python manage.py runserver          -->  默认在本机的8000端口启动

        2.在PyCharm启动
            点绿色的小箭头，直接可以启动Django

    2.配置相关  项目名/settings.py文件
        1.Templates(存放html文件的配置)  <--  告诉Django去哪儿找我的HTML文件
        2.静态文件（css,js,图片）
            STATIC_URL = '/static/'

            STATICFILES_DIRS = [
                os.path.join(BASE_DIR, "static")
            ]